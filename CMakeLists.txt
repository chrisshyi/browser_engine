cmake_minimum_required(VERSION 3.10)
set(CMAKE_CXX_COMPILER clang++-9)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++17 -stdlib=libc++ -g")
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS} -O0 -glldb -ggdb3")
project(browser_engine VERSION 1.0 DESCRIPTION "A toy browser engine" LANGUAGES CXX) 

add_executable(main src/main.cc include/browser_engine/node.h)
add_executable(tests tests/parser_tests.cc tests/test_main.cc extern/catch/catch.hpp include/browser_engine/parser.h)
add_library(node src/node.cc include/browser_engine/node.h include/browser_engine/node.h)
add_library(parser src/parser.cc include/browser_engine/parser.h)
set(CATCH_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/extern/catch)
add_library(Catch2::Catch IMPORTED INTERFACE)
set_property(TARGET Catch2::Catch PROPERTY INTERFACE_INCLUDE_DIRECTORIES "${CATCH_INCLUDE_DIR}")
target_compile_features(main PUBLIC cxx_std_17)
target_compile_features(node PUBLIC cxx_std_17)
target_compile_features(parser PUBLIC cxx_std_17)
target_include_directories(main PUBLIC include)
target_include_directories(node PUBLIC include)
target_include_directories(parser PUBLIC include)
target_link_libraries(main PUBLIC node)
target_link_libraries(main PUBLIC parser)
target_link_libraries(tests PUBLIC Catch2::Catch)
target_link_libraries(tests PUBLIC parser)
target_link_libraries(tests PUBLIC node)
